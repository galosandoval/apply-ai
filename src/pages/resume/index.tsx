import Head from "next/head"
import Link from "next/link"
import { type RouterOutputs, api } from "~/utils/api"
import { useUser } from "~/utils/useUser"

export default function ResumeView() {
  const { id } = useUser()

  const { data: profile } = api.profile.read.useQuery(
    { userId: id },
    {
      enabled: !!id
    }
  )

  const { data, status } = api.resume.list.useQuery(
    { profileId: profile?.id ?? "" },
    { enabled: !!profile?.id }
  )

  console.log(data)

  if (status === "error")
    return (
      <div>
        <Head>
          <title>gptBJ</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        {status}
      </div>
    )

  if (status === "success") {
    return (
      <>
        <Head>
          <title>gptBJ</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Resumes
          resumes={data}
          firstAndLastName={`${profile?.firstName} ${profile?.lastName}`}
        />
      </>
    )
  }

  return (
    <>
      <Head>
        <title>gptBJ</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="grid h-full place-items-center">Loading...</main>
    </>
  )
}

function Resumes({
  resumes,
  firstAndLastName
}: {
  resumes: RouterOutputs["resume"]["list"]
  firstAndLastName: string
}) {
  return (
    <div className="grid grid-cols-4">
      {resumes.map((resume) => (
        <Link
          href={`/resume/${resume.id}?name=${encodeURIComponent(
            firstAndLastName
          )}`}
          key={resume.id}
        >
          <h1>{resume.createdAt.toISOString()}</h1>
        </Link>
      ))}
    </div>
  )
}
