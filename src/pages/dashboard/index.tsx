import Head from "next/head"
import { Fragment, useEffect } from "react"
import { api } from "~/utils/api"
import { z } from "zod"
import { type ChatParams } from "../api/resume/chat"
import { useChat } from "ai/react"

const resumeId = "pm9ctl649di9bi5ftjsfpexw"

const generateForm = z.object({
  jobDescription: z.string()
})
type GenerateForm = z.infer<typeof generateForm>

export default function Dashboard() {
  const { data: users, status } = api.user.readAll.useQuery()
  const { data: resume, status: resumeStatus } = api.resume.readById.useQuery(
    { resumeId },
    { enabled: !!resumeId }
  )

  useEffect(() => {
    console.log(status)
    console.log(users)
  }, [status])

  interface PdfRequestBody {
    resumeId: string
  }

  const handleDownloadPdf = async () => {
    const requestBody: PdfRequestBody = { resumeId }

    try {
      const response = await fetch("/api/resume/pdf", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(requestBody)
      })

      const blob = await response.blob()

      const link = document.createElement("a")
      link.href = window.URL.createObjectURL(blob)
      link.download = `your-file-name.pdf`
      link.click()
    } catch (error) {
      console.error(error)
    }
  }

  const params: Omit<ChatParams, "messages"> = {
    education:
      "Lambda School is a 6+ month Computer Science & Software Engineering Academy that provides an immersive hands-on curriculum with a focus on computer science, web and mobile development, UX design, and data science.\n      • Approached all coding challenges using pair programming\n      • Utilized Git workflow on all projects\n      • Gained hands-on experience with client and server testing\n      • Completed all curriculum course work including: React, Redux, Node, Express, Jest,and Python\n      • Wrote production-ready code using ReactJS, Redux, and CSS on the front end and NodeJS and Express on the back end to build single page applications",
    experience:
      "General Manager\n        Go Get Em Tiger · Full-time\n        Feb 2017 - Mar 2020 · 3 yrs 2 mos\n        A high volume coffee bar in Downtown LA\n        • Optimized all systems in the store including administration and the flow of service\n        • Received 2 bonuses after reducing expenses by minimizing waste and correct allocation of staff\n        • Interviewed, hired, and trained new staff",
    skills: "React, Redux, Node, Express, Jest, Python",
    name: "John Doe",
    profession: "Software Engineer",
    interests:
      "When I’m not coding you’ll find me cooking, climbing, making ceramic mugs, or playing flag football."
  }

  const { messages, input, handleInputChange, handleSubmit } = useChat({
    api: "/api/resume/chat",
    body: {
      ...params
    }
  })

  console.log(messages)
  // const { register, handleSubmit } = useForm<GenerateForm>({
  //   resolver: zodResolver(generateForm)
  // })

  const onSubmit = async (values: GenerateForm) => {
    const params: Omit<ChatParams, "messages"> = {
      education:
        "Lambda School is a 6+ month Computer Science & Software Engineering Academy that provides an immersive hands-on curriculum with a focus on computer science, web and mobile development, UX design, and data science.\n      • Approached all coding challenges using pair programming\n      • Utilized Git workflow on all projects\n      • Gained hands-on experience with client and server testing\n      • Completed all curriculum course work including: React, Redux, Node, Express, Jest,and Python\n      • Wrote production-ready code using ReactJS, Redux, and CSS on the front end and NodeJS and Express on the back end to build single page applications",
      experience:
        "General Manager\n        Go Get Em Tiger · Full-time\n        Feb 2017 - Mar 2020 · 3 yrs 2 mos\n        A high volume coffee bar in Downtown LA\n        • Optimized all systems in the store including administration and the flow of service\n        • Received 2 bonuses after reducing expenses by minimizing waste and correct allocation of staff\n        • Interviewed, hired, and trained new staff",
      skills: "React, Redux, Node, Express, Jest, Python",
      name: "John Doe",
      profession: "Software Engineer",
      interests:
        "When I’m not coding you’ll find me cooking, climbing, making ceramic mugs, or playing flag football."
    }

    try {
      const response = await fetch("/api/resume/generate", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(params)
      })

      console.log(await response.json())
    } catch (error) {
      console.error(error)
    }
  }
  return (
    <>
      <Head>
        <title>Section1</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <button className="btn btn-accent btn-active" onClick={handleSignOut}>
        Log out
      </button>
      <main className="flex min-h-screen w-full py-12">
        <form action="" className=" flex w-full flex-col items-center">
          <div id="section1" className="flex w-full max-w-prose flex-col gap-3">
            <h1>Basics</h1>

            <input
              type="text"
              placeholder="first name"
              className="rounded-sm px-2 py-1"
            />
            <input
              type="text"
              placeholder="last name"
              className="rounded-sm px-2 py-1"
            />
            <input
              type="text"
              placeholder="email"
              className="rounded-sm px-2 py-1"
            />
            <input
              type="text"
              placeholder="phone numbah"
              className="rounded-sm px-2 py-1"
            />
            <input
              type="text"
              placeholder="address line"
              className="rounded-sm px-2 py-1"
            />
            <input
              type="text"
              placeholder="desired job title"
              className="rounded-sm px-2 py-1"
            />
            <textarea
              name=""
              id=""
              placeholder="descip"
              className="rounded-sm px-2 py-1"
            ></textarea>
          </div>
          <div id="section2" className="flex w-full max-w-prose flex-col gap-3">
            <h1>SkillztoKillz</h1>

            <textarea
              placeholder="list ur skills"
              className="min-h-[15ch] rounded-sm px-2 py-1"
            />
          </div>
          <div id="section3" className="flex w-full max-w-prose flex-col gap-3">
            <h1>Education</h1>

            <input
              type="text"
              placeholder="school"
              className="rounded-sm px-2 py-1"
            />
            <input
              type="text"
              placeholder="years"
              className="rounded-sm px-2 py-1"
            />
            <input
              type="text"
              placeholder="degree"
              className="rounded-sm px-2 py-1"
            />
            <input
              type="text"
              placeholder="focus/major"
              className="rounded-sm px-2 py-1"
            />
            <textarea
              placeholder="additional information"
              className="min-h-[15ch] rounded-sm px-2 py-1"
            />
          </div>
          <div id="section4" className="flex w-full max-w-prose flex-col gap-3">
            <h1>Summary</h1>

            <textarea
              placeholder="5-7 sentences about yourself. something along the lines of 'omg my hobbies and passions are all coincidentally what the job responsibilities are. I'm so quirky lol.'"
              className="min-h-[15ch] rounded-sm px-2 py-1"
            />
          </div>
          <div id="section5" className="flex w-full max-w-prose flex-col gap-3">
            <h1>Job Experiences</h1>
            <div className="flex flex-col gap-4">
              <h2>First Job Title:</h2>
              <input
                type="text"
                placeholder="jobTitle"
                className="rounded-sm px-2 py-1"
              />
              <input
                type="text"
                placeholder="company"
                className="rounded-sm px-2 py-1"
              />
              <div className="flex justify-evenly">
                <div>
                  <h3>Start date:</h3>
                  <input type="date" name="" id="" />
                </div>
                <div>
                  <h3>End date:</h3>
                  <input type="date" name="" id="" />
                </div>
              </div>
              <textarea
                placeholder="list of first job responsibilities"
                className="min-h-[15ch] rounded-sm px-2 py-1"
              />
            </div>

            <div className="flex flex-col gap-4">
              <h2>First Job Title:</h2>
              <input
                type="text"
                placeholder="jobTitle"
                className="rounded-sm px-2 py-1"
              />
              <input
                type="text"
                placeholder="company"
                className="rounded-sm px-2 py-1"
              />
              <div className="flex justify-evenly">
                <div>
                  <h3>Start date:</h3>
                  <input type="date" name="" id="" />
                </div>
                <div>
                  <h3>End date:</h3>
                  <input type="date" name="" id="" />
                </div>
              </div>
              <textarea
                placeholder="list of first job responsibilities"
                className="min-h-[15ch] rounded-sm px-2 py-1"
              />
            </div>

            <div className="flex flex-col gap-4">
              <h2>Third Job Title:</h2>
              <input
                type="text"
                placeholder="jobTitle"
                className="rounded-sm px-2 py-1"
              />
              <input
                type="text"
                placeholder="company"
                className="rounded-sm px-2 py-1"
              />
              <div className="flex justify-evenly">
                <div>
                  <h3>Start date:</h3>
                  <input type="date" name="" id="" />
                </div>
                <div>
                  <h3>End date:</h3>
                  <input type="date" name="" id="" />
                </div>
              </div>
              <textarea
                placeholder="list of third job responsibilities"
                className="min-h-[15ch] rounded-sm px-2 py-1"
              />
            </div>
            <button className="btn btn-primary btn-active">Submit</button>
          </div>
        </form>
      </main>


      <div className="flex w-full items-center justify-center"></div>

      <form onSubmit={handleSubmit}>
        <input
          placeholder="desciption"
          onChange={handleInputChange}
          value={input}
        />
        <button type="submit" className="btn btn-primary">
          generate
        </button>
      </form>
      {messages.map((message) => (
        <Fragment key={message.id}>{message.content}</Fragment>
      ))}

    </>
  )
}
